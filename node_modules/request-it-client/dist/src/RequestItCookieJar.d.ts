import { CookieJar } from 'tough-cookie';
import { Cookie, Store } from 'tough-cookie';
interface RequestItStore extends Store {
    findCookie(domain: string, path: string, key: string): Promise<Cookie | null>;
}
export interface RequestItCookieJar extends CookieJar {
    store: RequestItStore;
    getCookieString(currentUrl: string, options?: CookieJar.GetCookiesOptions | Function): Promise<string>;
    setCookie(cookieOrString: Cookie | string, currentUrl: string, options?: CookieJar.SetCookieOptions | Function): Promise<Cookie>;
}
export declare class RequestItCookieJar extends CookieJar {
    constructor(store?: Store, options?: CookieJar.Options);
    findCookie(domain: string, path: string, key: string): Promise<Cookie>;
    static fromCookieJar(cookieJar: CookieJar): RequestItCookieJar;
}
export {};
